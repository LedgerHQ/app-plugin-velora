import { processTest, populateTransaction} from "../../test.fixture";

const contractName = "Paraswap V5";

const testLabel = "Simple Swap"; // <= Name of the test
const testDirSuffix = "simple_swap"; // <= directory to compare device snapshots to
const testNetwork = "base";
const signedPlugin = false;

const contractAddr = "0x59c7c832e96d2568bea6db468c1aadcbbda08a52";
const chainID = 8453; // BASE

// From : https://basescan.org/tx/0xd48213ad460e7867ca319b2c515d50e2841cc670cb666537f594dfc2ee919b29
const inputData = "0x54e3f31b000000000000000000000000000000000000000000000000000000000000002000000000000000000000000023a96680ccde03bd4bdd9a3e9a0cb56a5d27f7c9000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000409f9cbc7c4a04c22000000000000000000000000000000000000000000000000000000008da3e8aa65c823a00000000000000000000000000000000000000000000000008f122ba9886d11e00000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000004c00000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008a3c2a819e3de7aca384c798269b3ce1cd0e437010000000000000000000000000000000000000000000000000000000003138800000000000000000000000000000000000000000000000000000000000005e00000000000000000000000000000000000000000000000000000000067454587f231cd8fe8644f85a1ff20900dc4331a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000aee2b8d4a154e36f479daece3fb3e6c3c03d396e000000000000000000000000dcf4ee5b700e2a5fec458e06b763a4a3e300449400000000000000000000000059c7c832e96d2568bea6db468c1aadcbbda08a52000000000000000000000000000000000000000000000000000000000000022cc04b8d59000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000059c7c832e96d2568bea6db468c1aadcbbda08a5200000000000000000000000000000000000000000000000000000000674e2ba6000000000000000000000000000000000000000007c13bc4b2c133c5600000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002b23a96680ccde03bd4bdd9a3e9a0cb56a5d27f7c9002710420000000000000000000000000000000000000600000000000000000000000000000000000000000091a32b6900000000000000000000000023a96680ccde03bd4bdd9a3e9a0cb56a5d27f7c9000000000000000000000000000000000000000038de60f7c988d0fcc00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001000000000000000000004de49342001c286d21c7507694cd52a9aa73c3d5ce56e1829cfe000000000000000000000000420000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001240000000000000000000000000000000000000000000000000000000000000208000000000000000000000000000000000000000000000000000000000000022c00000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

// Create serializedTx and remove the "0x" prefix
const serializedTx = populateTransaction(contractAddr, inputData, chainID,"30");

const devices = [
  {
    name: "nanos",
    label: "Nano S",
    steps: 9 // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanosp",
    label: "Nano S+",
    steps: 7 // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanox",
    label: "Nano X",
    steps: 7 // <= Define the number of steps for this test case and this device
  },
  // {
  //   name: "stax",
  //   label: "Stax",
  //   steps: 6 // <= Define the number of steps for this test case and this device
  // },
  // {
  //   name: "flex",
  //   label: "Flex",
  //   steps: 6 // <= Define the number of steps for this test case and this device
  // }
];

devices.forEach((device) =>
  processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx,testNetwork)
);
