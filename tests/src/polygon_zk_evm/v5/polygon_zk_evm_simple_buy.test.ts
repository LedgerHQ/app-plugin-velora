// TODO: Fix the error comming from this test 
import { processTest, populateTransaction} from "../../test.fixture";

const contractName = "Paraswap V5";

const testLabel = "Simple Buy"; // <= Name of the test
const testDirSuffix = "simple_buy"; // <= directory to compare device snapshots to
const testNetwork = "polygon_zk_evm";
const signedPlugin = false;

const contractAddr = "0xb83b554730d29ce4cb55bb42206c3e2c03e4a40a";
const chainID = 1101; // POLYGON_ZK_EVM

// From : https://zkevm.polygonscan.com/tx/0x03f3fbd15123ee0341194daf80e808f4c0a85f28e4d1c25b3f211c9e714319f8
const inputData = "0x2298207a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000068286607a1d43602d880d349187c3c48c0fd05e60000000000000000000000001e4a5963abfd975d8c9021ce480b42188849d41d00000000000000000000000000000000000000000000002b36591d51633b3763000000000000000000000000000000000000000000000000000000000248858d00000000000000000000000000000000000000000000002aff4fc178771da0d300000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000003e0000000000000000000000000efdb09ed95cbd86a977f4d24f4bf3a2d7b45e1ac0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000004200000000000000000000000000000000000000000000000000000000067445bc74f2511a038bb48859f2fb8baa8992ea3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f6ad3ccf71abb3e12becf6b3d2a74c963859adcd0000000000000000000000000000000000000000000000000000000000000124f28c0498000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000b83b554730d29ce4cb55bb42206c3e2c03e4a40a00000000000000000000000000000000000000000000000000000000674d41e7000000000000000000000000000000000000000000000000000000000248858d00000000000000000000000000000000000000000000002b36591d51633b3763000000000000000000000000000000000000000000000000000000000000003c1e4a5963abfd975d8c9021ce480b42188849d41d4f9a0e7fd2bf6067db6994cf12e4495df938e6e968286607a1d43602d880d349187c3c48c0fd05e60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000124000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

// Create serializedTx and remove the "0x" prefix
const serializedTx = populateTransaction(contractAddr, inputData, chainID, "101.508501444720532639");

const devices = [
  {
    name: "nanos",
    label: "Nano S",
    steps: 8 // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanosp",
    label: "Nano S+",
    steps: 6 // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanox",
    label: "Nano X",
    steps: 6 // <= Define the number of steps for this test case and this device
  },
  {
    name: "stax",
    label: "Stax",
  },
  {
    name: "flex",
    label: "Flex",
  }
];

devices.forEach((device) =>
  processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx,testNetwork)
);
