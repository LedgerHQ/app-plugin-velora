import { processTest, populateTransaction} from "../../test.fixture";

const contractName = "Paraswap V5";

const testLabel = "Simple Swap"; // <= Name of the test
const testDirSuffix = "simple_swap"; // <= directory to compare device snapshots to
const testNetwork = "optimism";
const signedPlugin = false;

const contractAddr = "0xdef171fe48cf0115b1d80b88dc8eab59176fee57";
const chainID = 10; // OPTIMISM

// From : https://optimistic.etherscan.io/tx/0x0a4082b2898259e082ae3494fecac42bda80ae57c011af2f33aa2e27760322df
const inputData = "0x54e3f31b00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000b2c639c533813f4aa9d7837caf62653d097ff85000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000cc06c1db053cc200000000000000000000000000000000000000000000000000cd0d392e73e59500000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008a3c2a819e3de7aca384c798269b3ce1cd0e437010000000000000000000000000000000000000000000000000000000003138800000000000000000000000000000000000000000000000000000000000004a0000000000000000000000000000000000000000000000000000000006744e23fb54d54f7d1fe4cd9b9674fa96c4403c500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000049e94895a26e697602c8270e437688514b291a81000000000000000000000000def171fe48cf0115b1d80b88dc8eab59176fee570000000000000000000000000000000000000000000000000000000000000148c04b8d59000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000def171fe48cf0115b1d80b88dc8eab59176fee5700000000000000000000000000000000000000000000000000000000674dc85e000000000000000000000000000000000000000000000000000000000bebc2000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002b0b2c639c533813f4aa9d7837caf62653d097ff850000644200000000000000000000000000000000000006000000000000000000000000000000000000000000e1829cfe

// Create serializedTx and remove the "0x" prefix
const serializedTx = populateTransaction(contractAddr, inputData, chainID,"30");

const devices = [
  // {
  //   name: "nanos",
  //   label: "Nano S",
  //   steps: 8 // <= Define the number of steps for this test case and this device
  // },
  // {
  //   name: "nanosp",
  //   label: "Nano S+",
  //   steps: 6 // <= Define the number of steps for this test case and this device
  // },
  // {
  //   name: "nanox",
  //   label: "Nano X",
  //   steps: 6 // <= Define the number of steps for this test case and this device
  // },
  {
    name: "stax",
    label: "Stax",
  },
  {
    name: "flex",
    label: "Flex",
  }
];

devices.forEach((device) =>
  processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx,testNetwork)
);
